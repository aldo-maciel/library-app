{"version":3,"sources":["service-worker.ts","shared/dictionary.ts","components/book/book-column-creator.tsx","components/book/book.service.ts","shared/toastr-util.ts","components/user/user.service.ts","components/book/book.component.ts","components/paginate/paginate.render.tsx","components/paginate/paginate.component.ts","components/header/header.render.tsx","components/book/book.render.tsx","shared/debounce.ts","components/book/book-regiter/book-register.component.ts","components/book/book-regiter/book-register.render.tsx","components/home-page/home-page.component.ts","components/book/book-evaluation/book-evaluation.service.ts","components/book/book-evaluation/book-evaluation.render.tsx","components/book/book-evaluation/book-evaluation.component.ts","components/home-page/home-page.render.tsx","components/login/login.component.ts","components/user/user-register.render.tsx","components/user/user-register.component.ts","components/login/login.render.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","dictionary","NENHUM_REGISTRO_ENCONTRADO","CONFIRMAR","NAO","SIM","SALVAR","CANCEL","CLOSE","MANDATORY","DELETAR_REGISTRO","EDITAR_REGISTRO","BOOK_AUTHOR","BOOK_NAME","BOOK_DESCRIPTION","BOOK_COVER","BOOK_ACTIONS","BOOK_TITLE","BOOK_ADD_NEW","BOOK_PLACEHOLDER_NAME","BOOK_PLACEHOLDER_AUTHOR","BOOK_PLACEHOLDER_DESCRIPTION","BOOK_SELECT","BOOK_DELETE_CONFIRM","BOOK_REGISTER_TITLE","BOOK_EVALUATION","HEADER_TITLE","HEADER_BOOKS","PAGINATE_PRIMEIRA","PAGINATE_ANTERIOR","PAGINATE_PROXIMA","PAGINATE_ULTIMA","PAGINATE_MOSTRANDO","PAGINATE_DE","PAGINATE_ATE","USER_LOGIN","USER_NAME","USER_ADMIN","USER_PLACEHOLDER_NAME","USER_PLACEHOLDER_LOGIN","USER_PASSWORD","USER_CONFIRM_PASSWORD","USER_LOGIN_PLACEHOLDER","USER_LOGIN_BTN","USER_REGISTER","USER_PASSWORD_PLACEHOLDER","USER_CONFIRM_PASSWORD_PLACEHOLDER","ERROR_MESSAGE","ERROR_TITLE","SUCCESS_MESSAGE","SUCCESS_TITLE","Object","freeze","this","msg","param","replace","BookColumnCreator","row","deleteRecord","noop","className","to","_id","title","onClick","BookService","params","text","filter","start","axios","get","URL","id","delete","record","post","put","onSuccess","toastr","success","onError","error","message","console","userService","UserService","data","Error","localStorage","setItem","JSON","stringify","removeItem","getItem","assign","parse","BookComponent","pagination","service","totalRecords","state","rows","Array","redirectLogin","isLogged","getUser","admin","findAll","value","count","setState","event","find","Swal","fire","icon","showCancelButton","confirmButtonText","cancelButtonText","_confirm","getMessageWithParam","name","then","_doRequest","removeBook","React","Component","PaginateRender","from","props","of","step","getInfo","disabled","paginate","callSearch","onChange","option","Math","ceil","HeaderRender","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","hidden","logout","BookRender","map","key","src","cover","base64","alt","author","description","substring","getActionsIcons","bind","length","colSpan","onChangePaginate","func","waitFor","timeout","args","Promise","resolve","clearTimeout","setTimeout","BookRegisterComponent","redirect","findById","$event","preventDefault","update","create","file","BookRegisterRender","goToGrid","onSubmit","save","onReset","debounce","htmlFor","placeholder","maxLength","required","onChangeName","target","onChangeAuthor","onChangeDescription","labelText","callbackFunction","getFiles","accept","multiple","imagePreview","buttonComponent","HomePageComponent","BookEvaluationService","bookId","rating","BookEvaluationRender","Modal","show","showEvaluations","centered","onHide","Header","stopPropagation","Body","book","evaluations","evaluation","user","starRatedColor","starSpacing","starDimension","numberOfStars","Footer","showModal","children","modalEvaluations","dialogClassName","close","starHoverColor","changeRating","newRating","evaluate","HomePageRender","LoginComponent","login","response","password","UserRegisterRender","onChangeLogin","onChangePassword","onChangeConfirmPassword","onChangeAdmin","checked","errors","notConfirmed","LoginRender","goToHome","clear","moment","locale","ReactDOM","render","history","createHashHistory","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uPAYoBA,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2D,oDC+CKC,EAAa,I,WAVtB,aAAe,yBAtDfC,2BAAqC,8BAsDvB,KArDdC,UAAoB,YAqDN,KApDdC,IAAc,SAoDA,KAnDdC,IAAc,MAmDA,KAlDdC,OAAiB,SAkDH,KAjDdC,OAAiB,WAiDH,KAhDdC,MAAgB,SAgDF,KA/CdC,UAAoB,wBA+CN,KA9CdC,iBAA2B,mBA8Cb,KA7CdC,gBAA0B,kBA6CZ,KA3CdC,YAAsB,QA2CR,KA1CdC,UAAoB,OA0CN,KAzCdC,iBAA2B,kBAyCb,KAxCdC,WAAqB,OAwCP,KAvCdC,aAAuB,aAuCT,KAtCdC,WAAqB,SAsCP,KArCdC,aAAuB,YAqCT,KApCdC,sBAAgC,mBAoClB,KAnCdC,wBAAkC,mBAmCpB,KAlCdC,6BAAuC,8BAkCzB,KAjCdC,YAAsB,YAiCR,KAhCdC,oBAA8B,wDAgChB,KA/BdC,oBAA8B,YA+BhB,KA9BdC,gBAA0B,mBA8BZ,KA5BdC,aAAuB,aA4BT,KA3BdC,aAAuB,SA2BT,KAzBdC,kBAA4B,WAyBd,KAxBdC,kBAA4B,WAwBd,KAvBdC,iBAA2B,aAuBb,KAtBdC,gBAA0B,YAsBZ,KArBdC,mBAA6B,YAqBf,KApBdC,YAAsB,KAoBR,KAnBdC,aAAuB,SAmBT,KAjBdC,WAAqB,QAiBP,KAhBdC,UAAoB,OAgBN,KAfdC,WAAqB,gBAeP,KAddC,sBAAgC,mBAclB,KAbdC,uBAAiC,oBAanB,KAZdC,cAAwB,QAYV,KAXdC,sBAAgC,kBAWlB,KAVdC,uBAAiC,2BAUnB,KATdC,eAAyB,SASX,KARdC,cAAwB,cAQV,KAPdC,0BAAoC,sBAOtB,KANdC,kCAA4C,wBAM9B,KALdC,cAAwB,uCAKV,KAJdC,YAAsB,OAIR,KAHdC,gBAA0B,wCAGZ,KAFdC,cAAwB,UAGpBC,OAAOC,OAAOC,M,gEAGEC,GAA+B,IAAlBC,EAAiB,uDAAJ,GAE1C,OAAOD,EAAIE,QAAQ,cAAeD,O,MCxD7BE,EAAb,6IAU2BC,GAAgD,IAArCC,EAAoC,uDAAXN,KAAKO,KAC5D,OAAO,yBAAKC,UAAU,kDAClB,kBAAC,IAAD,CAAMC,GAAE,kBAAeJ,EAAIK,KAASF,UAAU,0BAA0BG,MAAQ/D,EAAWU,iBACvF,wBAAIkD,UAAU,yBAElB,4BAAQA,UAAU,0BAA0BG,MAAQ/D,EAAWS,iBAAmBuD,QAAU,kBAAMN,EAAaD,KAC3G,wBAAIG,UAAU,+BAhB9B,K,0DCDaK,EAAb,gGAeYC,EAAoBC,GAKxB,OAJID,EAAOE,OAAOD,OAASA,IACvBD,EAAOG,MAAQ,GAEnBH,EAAOE,OAAS,CAAED,QACXG,IAAMC,IAAqCN,EAAYO,IAAK,CAAEN,aApB7E,+BA4BaO,GACL,OAAOH,IAAMC,IAAN,UAAoBN,EAAYO,IAAhC,YAAyCC,MA7BxD,iCAqCeA,GACP,OAAOH,IAAMI,OAAN,UAAiBT,EAAYO,IAA7B,YAAsCC,MAtCrD,6BA6CWE,GACH,OAAOL,IAAMM,KAAKX,EAAYO,IAAKG,KA9C3C,6BAsDWF,EAAYE,GACf,OAAOL,IAAMO,IAAN,UAAcZ,EAAYO,IAA1B,YAAmCC,GAAOE,MAvDzD,2BAIY,MAAO,iBAJnB,K,iBCDaG,EAAY,kBAAMC,IAAOC,QAAQhF,EAAWgD,gBAAiBhD,EAAWiD,gBAExEgC,EAAU,SAACC,GAAgC,IAAlBC,EAAiB,uDAAP,GAC5CC,QAAQF,MAAMA,GACdH,IAAOG,MAAMC,GAAWD,EAAMC,SAAWnF,EAAW8C,cAAe9C,EAAW+C,cCsCrEsC,EAAc,I,wIA7BVV,G,yFACcL,IAAMM,KAAKU,EAAYd,IAAKG,G,mBAA3CY,E,EAAAA,K,sBAEE,IAAIC,M,OAEdC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,I,uKAGpCrB,G,yFACeI,IAAMC,IAAIe,EAAYd,IAAK,CAAEN,W,mBAA5CqB,E,EAAAA,K,sBAEE,IAAIC,M,OAEdC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,I,iIAI5CE,aAAaI,WAAW,U,iCAIxB,QAASJ,aAAaK,QAAQ,U,gCAI9B,OAAO5C,OAAO6C,OAAO,GAAIJ,KAAKK,MAAMP,aAAaK,QAAQ,a,2BAlCrD,MAAO,iB,MCGNG,EAAb,4MACYC,gBADZ,IAEcC,QAAuB,IAAIlC,EAFzC,EAGcmC,aAAuB,EAHrC,EAIWC,MAAQ,CAAEC,KAAMC,QAAeC,eAAgBnB,EAAYoB,aAAepB,EAAYqB,UAAUC,OAJ3G,4FAUevC,GAVf,gGAYgFhB,KAAK+C,QAAQS,QAAQxD,KAAK8C,WAAY9B,GAZtH,OAYkByC,EAZlB,OAcYzD,KAAKgD,aAAeS,EAAMtB,KAAKuB,MAC/B1D,KAAK2D,SAAS,CAAET,KAAMO,EAAMtB,KAAKA,OAf7C,gDAiBYN,EAAQ,EAAD,IAjBnB,0LA2BqB+B,EAAiB1D,GA3BtC,0FA6BkB0D,EAAM1D,GA7BxB,OA8BYF,KAAK6D,KAAK,IACVnC,IA/BZ,gDAiCYG,EAAQ,EAAD,IAjCnB,yJAyCqBiB,GACb9C,KAAK8C,WAAaA,EAClB9C,KAAK6D,KAAK,MA3ClB,+BAsDa9B,GAAwD,IAAvCpB,EAAsC,uDAAtB/D,EAAWE,UACjD,OAAOgH,IAAKC,KAAK,CACbpD,MAAOA,EACPI,KAAMgB,EACNiC,KAAM,UACNC,kBAAkB,EAClBC,kBAAmBtH,EAAWI,IAC9BmH,iBAAkBvH,EAAWG,QA7DzC,iCAiEesD,GAAY,IAAD,OAClBL,KAAKoE,SAASxH,EAAWyH,oBAAoBzH,EAAWsB,oBAAqBmC,EAAIiE,OAAOC,MAAK,YAAe,EAAZd,OAExF,EAAKe,WAAW,EAAKzB,QAAQ0B,WAAYpE,EAAIK,YApE7D,GAAmCgE,IAAMC,WCN5BC,EAAb,wKAKQ,IAAMC,EAAO7E,KAAK8E,MAAM9B,aAAe,GAAKhD,KAAK8C,WAAW7B,OAAS,GAAK,EAAI,EACxE8D,EAAM/E,KAAK8C,WAAW7B,MAAQjB,KAAK8E,MAAME,KAAQhF,KAAK8E,MAAM9B,aAAehD,KAAK8E,MAAM9B,aAAgBhD,KAAK8C,WAAW7B,MAAQjB,KAAK8E,MAAME,KAC/I,OACI,yBAAKxE,UAAU,WACT5D,EAAW+B,mBADjB,IACwCkG,EADxC,IACiDjI,EAAWiC,aAD5D,IAC6EkG,EAD7E,IACoFnI,EAAWgC,YAD/F,IAC+GoB,KAAK8E,MAAM9B,gBATtI,+BAckF,IAAD,OACzE,OAAO,yBAAKxC,UAAU,kCAChBR,KAAKiF,UACP,6BACI,4BAAQC,SAAWlF,KAAK8C,WAAW7B,MAAQjB,KAAK8E,MAAME,KAAOpE,QAAU,kBAAM,EAAKuE,SAAS,IACnF3E,UAAU,eAAeG,MAAQ/D,EAAW2B,mBAChD,wBAAIiC,UAAU,mCAElB,4BAAQ0E,SAAWlF,KAAK8C,WAAW7B,MAAQjB,KAAK8E,MAAME,KAAOpE,QAAU,kBAAM,EAAKuE,SAAS,IACnF3E,UAAU,eAAeG,MAAQ/D,EAAW4B,mBAChD,wBAAIgC,UAAU,iCAElB,4BAAQ0E,SAAWlF,KAAK8E,MAAM9B,cAAiBhD,KAAK8E,MAAME,KAAOhF,KAAK8C,WAAW7B,MAASL,QAAU,kBAAM,EAAKuE,SAAS,IAChH3E,UAAU,eAAeG,MAAQ/D,EAAW6B,kBAChD,wBAAI+B,UAAU,0CAElB,4BAAQ0E,SAAWlF,KAAK8E,MAAM9B,cAAiBhD,KAAK8E,MAAME,KAAOhF,KAAK8C,WAAW7B,MAASL,QAAU,kBAAM,EAAKuE,SAAS,IAChH3E,UAAU,eAAeG,MAAQ/D,EAAW8B,iBAChD,wBAAI8B,UAAU,0CAhClC,GCDA,4MACcsC,WAAyB,CAAE7B,MAAO,EAAG+D,KAAM,EAAKF,MAAME,KAAMhE,OAAQ,IADlF,kEAIQhB,KAAKoF,eAJb,mCAWQpF,KAAK8E,MAAMO,SAASrF,KAAK8C,cAXjC,+BAmBuBwC,GACf,OAAQA,GACJ,KAAK,EACD,GAAKtF,KAAK8C,WAAW7B,MAAQjB,KAAK8E,MAAME,KAAQhF,KAAK8E,MAAM9B,aAAc,OACzEhD,KAAK8C,WAAW7B,OAASjB,KAAK8E,MAAME,KACpC,MAEJ,KAAK,EACD,GAAIhF,KAAK8C,WAAW7B,OAAS,EAAG,OAChCjB,KAAK8C,WAAW7B,OAASjB,KAAK8E,MAAME,KACpC,MAEJ,KAAK,EACDhF,KAAK8C,WAAW7B,MAAQsE,KAAKC,KAAKxF,KAAK8E,MAAM9B,aAAehD,KAAK8E,MAAME,MAAQhF,KAAK8E,MAAME,KACtFhF,KAAK8C,WAAW7B,OAASjB,KAAK8E,MAAM9B,eACpChD,KAAK8C,WAAW7B,OAASjB,KAAK8E,MAAME,MAExC,MAEJ,QACIhF,KAAK8C,WAAW7B,MAAQ,EAGhCjB,KAAKoF,iBA1Cb,GAAuCV,IAAMC,YCEhCc,EAAb,uKAGQ,OACI,yBAAKjF,UAAU,+CACX,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,gBAAiB5D,EAAWyB,cACvD,4BAAQmC,UAAU,iBAAiBkF,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YACvGC,gBAAc,QAAQC,aAAW,2BACrC,0BAAMvF,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2Ba,GAAG,aACzC,wBAAIb,UAAU,sBACV,wBAAIA,UAAU,WAAWwF,QAAU/D,EAAYqB,UAAUC,OACrD,kBAAC,IAAD,CAAM/C,UAAU,WAAWC,GAAG,WACxB7D,EAAW0B,gBAIzB,0BAAMkC,UAAU,eACZ,0BAAMA,UAAU,WAAYyB,EAAYqB,UAAUgB,MAClD,kBAAC,IAAD,CAAM9D,UAAU,eAAeC,GAAG,IAAIG,QAAU,kBAAMqB,EAAYgE,WAC9D,wBAAIzF,UAAU,2CArB1C,GAAkCkE,IAAMC,WCI3BuB,EAAb,uKAEkC,IAAD,OACzB,OAAOlG,KAAKiD,MAAMG,cAAgB,kBAAC,IAAD,CAAU3C,GAAG,MAC3C,6BACI,kBAAC,EAAD,MACA,yBAAKD,UAAU,kBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,eACX,4BAAM5D,EAAWgB,aAErB,yBAAK4C,UAAU,aACX,kBAAC,IAAD,CAAMA,UAAU,0DAA0DC,GAAG,qBACzE,wBAAID,UAAU,gCAA+B,8BAAQ5D,EAAWiB,eAEpE,2BAAO2C,UAAU,6EACb,+BACI,4BACI,wBAAIA,UAAU,eAAgB5D,EAAWc,YACzC,wBAAI8C,UAAU,eAAgB5D,EAAWY,WACzC,wBAAIgD,UAAU,eAAgB5D,EAAWW,aACzC,wBAAIiD,UAAU,eAAgB5D,EAAWa,kBACzC,wBAAI+C,UAAU,eAAgB5D,EAAWe,gBAGjD,+BAEQqC,KAAKiD,MAAMC,KAAKiD,KAAI,SAAA9F,GAChB,OACI,wBAAI+F,IAAM/F,EAAIK,KACV,wBAAIF,UAAU,eACV,yBAAKA,UAAU,SACX,yBAAKA,UAAU,YAAY6F,IAAMhG,EAAIiG,MAAMC,OAASC,IAAM5J,EAAWc,eAG7E,wBAAI8C,UAAU,eAAgBH,EAAIiE,MAClC,wBAAI9D,UAAU,eAAgBH,EAAIoG,OAAlC,KACA,wBAAIjG,UAAU,cAAcG,MAAQN,EAAIqG,aACpC,yBAAKlG,UAAU,eACTH,EAAIqG,YAAYC,UAAU,EAAG,OAGvC,wBAAInG,UAAU,eACVJ,EAAkBwG,gBAAgBvG,EAAK,EAAKoE,WAAWoC,KAAK,SAOjD,IAA3B7G,KAAKiD,MAAMC,KAAK4D,QAChB,wBAAItG,UAAU,YACV,wBAAIuG,QAAU,GAAMnK,EAAWC,8BAI3C,+BACI,wBAAI2D,UAAU,YACV,wBAAIuG,QAAU,GACV,kBAAC,EAAD,CAAgB1B,SAAW,SAACvC,GAAD,OAA4B,EAAKkE,iBAAiBlE,IAC7DkC,KAAO,GACPhC,aAAehD,KAAKgD,4BA9DpF,GAAgCH,GCTb,WAAoCoE,EAASC,GAC5D,IAAIC,EAEJ,OAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACH,IAAIC,SAAQ,SAAAC,GACJH,GACAI,aAAaJ,GAGjBA,EAAUK,YAAW,kBAAMF,EAAQL,EAAI,WAAJ,EAAQG,MAAQF,QCFlDO,EAAb,4MACY1E,QAAuB,IAAIlC,EADvC,EAEWoC,MAAe,CAAE1B,OAAQ,GAAYmG,UAAU,EAAOtE,eAAgBnB,EAAYoB,aAAepB,EAAYqB,UAAUC,OAFlI,EAGY7C,IAAc,EAAKoE,MAAMnI,MAAMmE,OAAOO,GAHlD,kEAK+B,IAAD,OAClBrB,KAAKU,KACLV,KAAK+C,QAAQ4E,SAAS3H,KAAKU,KACtB6D,MAAK,YAAe,IAAZpC,EAAW,EAAXA,KACL,EAAKwB,SAAS,CACVpC,OAAQY,OAEb,WACC,EAAKwB,SAAS,CACV+D,UAAU,SAdlC,oEAoByBE,GApBzB,oEAqBQA,EAAOC,iBArBf,UAuBgB7H,KAAKU,IAvBrB,gCAwBsBV,KAAK+C,QAAQ+E,OAAO9H,KAAKU,IAAKV,KAAKiD,MAAM1B,QAxB/D,6CA0BsBvB,KAAK+C,QAAQgF,OAAO/H,KAAKiD,MAAM1B,QA1BrD,OA4BYG,IA5BZ,kDA8BYG,EAAQ,EAAD,IA9BnB,yBAgCY7B,KAAK2D,SAAS,CAAE+D,UAAU,IAhCtC,uKAwC2BpD,GACnBtE,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAE+C,aAzCnE,+BAgDuB0D,GACfhI,KAAK2D,SAAS,CACVpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAE+E,MAAO0B,QAlD9D,0CA0DkCtB,GAC1B1G,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAEmF,oBA3DnE,qCAkE6BD,GACrBzG,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAEkF,iBAnEnE,GAA2C/B,IAAMC,W,iBCEpCsD,EAAb,yKAGQ,GAAIjI,KAAKiD,MAAMyE,SACX,OAAO,kBAAC,IAAD,CAAUjH,GAAG,cAJhC,+BAQkC,IAAD,OACzB,OAAOT,KAAKiD,MAAMG,cAAgB,kBAAC,IAAD,CAAU3C,GAAG,MAC3C,6BACI,kBAAC,EAAD,MACA,yBAAKD,UAAU,kBACTR,KAAKkI,WACP,yBAAK1H,UAAU,mBACX,0BAAM2H,SAAW,SAAAP,GAAM,OAAI,EAAKQ,KAAKR,IAC/BS,QAAU,kBAAMC,GAAS,kBAAM,EAAK3E,SAAS,CAAE+D,UAAU,MAAS,IAAlDY,KAClB,yBAAK9H,UAAU,gBACX,yBAAKA,UAAU,eACX,4BAAM5D,EAAWuB,sBAErB,yBAAKqC,UAAU,aACX,yBAAKA,UAAU,yDACX,2BAAO+H,QAAQ,WAAW/H,UAAU,kBAAmB5D,EAAWY,UAAlE,KACA,2BAAOkI,KAAK,OAAOlF,UAAU,eAAea,GAAG,WAAWmH,YAAc5L,EAAWkB,sBAC5E2K,UAAY,IAAMC,UAAQ,EAACjF,MAAQzD,KAAKiD,MAAM1B,OAAO+C,MAAQ,GAC7De,SAAW,SAAAuC,GAAM,OAAI,EAAKe,aAAaf,EAAOgB,OAAOnF,WAEhE,yBAAKjD,UAAU,yDACX,2BAAO+H,QAAQ,aAAa/H,UAAU,mBAAoB5D,EAAWW,aACrE,2BAAOmI,KAAK,OAAOlF,UAAU,eAAea,GAAG,aACxCmH,YAAc5L,EAAWmB,wBAA0B0K,UAAY,GAC/DhF,MAAQzD,KAAKiD,MAAM1B,OAAOkF,QAAU,GACpCpB,SAAW,SAAAuC,GAAM,OAAI,EAAKiB,eAAejB,EAAOgB,OAAOnF,WAElE,yBAAKjD,UAAU,yDACX,2BAAO+H,QAAQ,kBAAkB/H,UAAU,mBAAoB5D,EAAWa,kBAC1E,8BAAU+C,UAAU,eAAea,GAAG,kBAAkBoH,UAAY,IAC1DD,YAAc5L,EAAWoB,6BACzByF,MAAQzD,KAAKiD,MAAM1B,OAAOmF,aAAe,GACzCrB,SAAW,SAAAuC,GAAM,OAAI,EAAKkB,oBAAoBlB,EAAOgB,OAAOnF,QAASP,KAAO,MAE1F,yBAAK1C,UAAU,yDACX,2BAAO+H,QAAQ,YAAY/H,UAAU,mBAC/B5D,EAAWc,WAAY,8CAE7B,yBAAK8C,UAAU,OAAOwF,QAAUhG,KAAKiD,MAAM1B,OAAO+E,OAC9C,yBAAK9F,UAAU,gBAAgB6F,KAAOrG,KAAKiD,MAAM1B,OAAO+E,OAAS,IAAIC,QAAU,GAC1EC,IAAM5J,EAAWc,cAE1B,kBAAC,IAAD,CAAoBqL,UAAY,GAAKC,iBAAmBhJ,KAAKiJ,SAASpC,KAAK7G,MAAQkJ,OAAO,YACtEC,UAAW,EAAQC,cAAe,EAClCC,gBACI,4BAAQ3D,KAAK,SACLlF,UAAU,0BACZ5D,EAAWqB,gBAI7C,2BAAOuC,UAAU,eAAgB5D,EAAWQ,YAEhD,yBAAKoD,UAAU,eACX,yBAAKA,UAAU,cACX,4BAAQA,UAAU,yBAAyBkF,KAAK,UAAW9I,EAAWK,QACtE,4BAAQuD,UAAU,sBAAsBkF,KAAK,SAAU9I,EAAWM,mBAhE1G,GAAwCuK,GCA3B6B,EAAb,4MACcvG,QAAuB,IAAIlC,EADzC,EAEciC,WAAyB,CAAE7B,MAAO,EAAG+D,KAAM,GAAIhE,OAAQ,IAFrE,EAGWiC,MAAQ,CAAEC,KAAMC,QAAeC,eAAgBnB,EAAYoB,YAHtE,kEAMQrD,KAAK6D,KAAK,MANlB,oEAae7C,GAbf,gGAegFhB,KAAK+C,QAAQS,QAAQxD,KAAK8C,WAAY9B,GAftH,OAekByC,EAflB,OAiBYzD,KAAK2D,SAAS,CAAET,KAAMO,EAAMtB,KAAKA,OAjB7C,gDAmBYN,EAAQ,EAAD,IAnBnB,qHAAuC6C,IAAMC,W,yBCPhC4E,EAAb,iGAcaC,EAAgBC,GACrB,OAAOvI,IAAMM,KAAN,UAAe+H,EAAsBnI,IAArC,YAA8CoI,GAAW,CAAEC,cAf1E,2BAIY,MAAO,4BAJnB,KCKaC,EAAb,iLAEwB,IAAD,OACf,GAAK1J,KAAKiD,MAAMM,MAGhB,OAAO,kBAACoG,EAAA,EAAD,CAAOC,KAAO5J,KAAKiD,MAAM4G,gBAAkBC,UAAW,EAAOC,OAAS,kBAAM,EAAKpG,SAAS,CAAEkG,iBAAiB,MAChH,kBAACF,EAAA,EAAMK,OAAP,CAAcxJ,UAAU,WACpB,yBAAKA,UAAU,iEACX,4BAAM5D,EAAWwB,iBACjB,4BAAQsH,KAAK,SAASlF,UAAU,sBAAsBI,QAClD,SAACgD,GACGA,EAAMqG,kBACN,EAAKtG,SAAS,CAAEkG,iBAAiB,MAGrC,wBAAIrJ,UAAU,sDAI1B,kBAACmJ,EAAA,EAAMO,KAAP,CAAY1J,UAAU,YACfR,KAAK8E,MAAMqF,KAAKC,aAAe,IAAIjE,KAAI,SAAAkE,GACtC,OAAO,yBAAK7J,UAAU,MAAM4F,IAAMiE,EAAW3J,KACzC,yBAAKF,UAAU,SACT6J,EAAWC,KAAKhG,MAEtB,yBAAK9D,UAAU,SACX,kBAAC,IAAD,CACIiJ,OAASY,EAAWZ,OACpBc,eAAe,oBACfC,YAAY,QACZC,cAAc,OACdC,cAAgB,EAChBpG,KAAK,gBAMzB,kBAACqF,EAAA,EAAMgB,OAAP,CAAcnK,UAAU,WACpB,4BAAQkF,KAAK,SAASlF,UAAU,sBAAsBI,QAAU,SAACgD,GAC7DA,EAAMqG,kBACN,EAAKtG,SAAS,CAAEkG,iBAAiB,MAC/BjN,EAAWO,WA3CjC,+BAgDkC,IAAD,OACzB,OACI,yBAAKyD,QAAU,kBAAM,EAAK+C,SAAS,CAAEiH,WAAW,KAAUpK,UAAS,UAAOR,KAAK8E,MAAMtE,UAAlB,qBAC7DR,KAAK8E,MAAM+F,SACX7K,KAAK8K,mBACP,kBAACnB,EAAA,EAAD,CAAOC,KAAO5J,KAAKiD,MAAM2H,UAAYd,UAAW,EAAOiB,gBAAgB,aACnE,kBAACpB,EAAA,EAAMK,OAAP,CAAcxJ,UAAU,WACpB,yBAAKA,UAAU,iEACX,6BACI,4BAAMR,KAAK8E,MAAMqF,KAAK7F,MACtB,4BAAMtE,KAAK8E,MAAMqF,KAAK1D,SAE1B,4BAAQjG,UAAU,sBAAsBI,QACpC,SAACgD,GACGA,EAAMqG,kBACN,EAAKe,UAGT,wBAAIxK,UAAU,sDAI1B,kBAACmJ,EAAA,EAAMO,KAAP,CAAY1J,UAAU,WAClB,yBAAKA,UAAU,8BACX,4BAAQkF,KAAK,SAASlF,UAAU,0BAA0BwF,QAAUhG,KAAKiD,MAAMM,MACvE3C,QAAU,kBAAM,EAAK+C,SAAS,CAAEkG,iBAAiB,MACrD,wBAAIrJ,UAAU,UACV,0BAAMA,UAAU,wCAAyCR,KAAKiD,MAAMmH,aACpE,0BAAM5J,UAAU,WAAhB,mBACA,kCAAS5D,EAAWwB,mBAG5B,kBAAC,IAAD,CACIqL,OAASzJ,KAAKiD,MAAMwG,OACpBc,eAAe,oBACfU,eAAe,yBACfT,YAAY,QACZC,cAAc,OACdS,aAAelL,KAAKkL,aAAarE,KAAK7G,MACtC0K,cAAgB,EAChBpG,KAAK,YAGb,yBAAK9D,UAAU,6BACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,wBAAwB6F,IAAMrG,KAAK8E,MAAMqF,KAAK7D,MAAMC,OAASC,IAAM5J,EAAWc,cAEjG,yBAAK8C,UAAU,mCACX,4BAAM5D,EAAWa,kBACjB,yBAAK+C,UAAU,+CACTR,KAAK8E,MAAMqF,KAAKzD,gBAKlC,kBAACiD,EAAA,EAAMgB,OAAP,CAAcnK,UAAU,WACpB,4BAAQA,UAAU,sBAAsBI,QAAU,SAACgD,GAC/CA,EAAMqG,kBACN,EAAKe,UACHpO,EAAWO,cA3GzC,GCDA,4MACY4F,QAAiC,IAAIwG,EADjD,EAEWtG,MAAe,CAAE2H,WAAW,EAAOnB,OAAQ,EAAGW,YAAa,EAAG7G,OAAO,EAAOsG,iBAAiB,GAFxG,kEAKQ,IAAMS,EAAOrI,EAAYqB,UACrBgH,EAAK/G,OACLvD,KAAK2D,SAAS,CACVJ,MAAO+G,EAAK/G,MACZ6G,aAAcpK,KAAK8E,MAAMqF,KAAKC,aAAe,IAAItD,SAGrD9G,KAAK8E,MAAMqF,KAAKE,YAChBrK,KAAK2D,SAAS,CACV8F,OAAQzJ,KAAK8E,MAAMqF,KAAKE,WAAWZ,WAdnD,wEAmB6B0B,GAnB7B,0FAqBkBnL,KAAK+C,QAAQqI,SAASpL,KAAK8E,MAAMqF,KAAKzJ,IAAKyK,GArB7D,OAsBYzJ,IAtBZ,+CAwBYG,EAAQ,EAAD,IAxBnB,6IA6BQ7B,KAAK2D,SAAS,CAAEiH,WAAW,MA7BnC,6BAiCQ5K,KAAK2D,SAAS,CAAEiH,WAAW,MAjCnC,mCAoCiBO,GACTnL,KAAK2D,SAAS,CAAE8F,OAAQ0B,IACxBnL,KAAKoL,SAASD,OAtCtB,GAA6CzG,IAAMC,YCCtC0G,EAAb,uKAGQ,OAAOrL,KAAKiD,MAAMG,cAAgB,kBAAC,IAAD,CAAU3C,GAAG,MAC3C,6BACI,kBAAC,EAAD,MACA,yBAAKD,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aAEPR,KAAKiD,MAAMC,KAAKiD,KAAI,SAAAgE,GAChB,OACI,yBAAK3J,UAAU,wCAAwC4F,IAAM+D,EAAKzJ,KAC9D,kBAAC,EAAD,CAAsByJ,KAAOA,EAAO3J,UAAU,0BAC1C,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,uBAAuB6F,IAAM8D,EAAK7D,MAAMC,OAASC,IAAM5J,EAAWc,aACjF,yBAAK8C,UAAU,yBACX,+BAAS2J,EAAK1D,UAGtB,yBAAKjG,UAAU,uBACX,yBAAKA,UAAU,uBACT2J,EAAK7F,MAEX,yBAAK9D,UAAU,yCACT2J,EAAKzD,2BAzB/D,GAAoC4C,GCDvBgC,EAAb,4MACIrI,MAAe,CAAE1B,OAAQ,GAAYmG,UAAU,EAAO5F,OAAO,GADjE,6FAG0B8F,GAH1B,8EAIQA,EAAOC,iBAJf,kBAMkB5F,EAAYsJ,MAAMvL,KAAKiD,MAAM1B,QAN/C,OAOYvB,KAAK2D,SAAS,CAAE+D,UAAU,IAPtC,gDASY1H,KAAK2D,SAAS,CAAE7B,OAAO,IACf0J,EAVpB,KAUoBA,SACR3J,EAAQ,EAAD,GAAQ2J,EAASrJ,MAXpC,8IAgBQnC,KAAK2D,SAAS,CAAEpC,OAAQ,OAhBhC,oCAuB4BgK,GACpBvL,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAEgK,cAxBnE,uCA+B+BE,GACvBzL,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAEkK,mBAhCnE,GAAoC/G,IAAMC,WCD7B+G,EAAb,uKAEkC,IAAD,OACzB,OACI,4BAAQhG,KAAK,SAAS9E,QAAU,kBAAM,EAAK+C,SAAS,CAAEiH,WAAW,KAAUpK,UAAU,gBAC/E5D,EAAW2C,cACb,kBAACoK,EAAA,EAAD,CAAOC,KAAO5J,KAAKiD,MAAM2H,UAAYd,UAAW,EAAOiB,gBAAgB,YACnE,0BAAM5C,SAAW,SAAAP,GAAM,OAAI,EAAKQ,KAAKR,IAAUS,QAAU,kBAAM,EAAK2C,UAChE,kBAACrB,EAAA,EAAMK,OAAP,CAAcxJ,UAAU,WACpB,yBAAKA,UAAU,iEACX,4BAAM5D,EAAW2C,eACjB,4BAAQmG,KAAK,SAASlF,UAAU,eAAeI,QAC3C,SAACgD,GACGA,EAAMqG,kBACN,EAAKe,UAEX,wBAAIxK,UAAU,sDAGxB,kBAACmJ,EAAA,EAAMO,KAAP,CAAY1J,UAAU,WAClB,yBAAKA,UAAU,yDACX,2BAAO+H,QAAQ,WAAW/H,UAAU,kBAAmB5D,EAAWmC,UAAlE,KACA,2BAAO2G,KAAK,OAAOlF,UAAU,eAAea,GAAG,WAAWmH,YAAc5L,EAAWqC,sBAC5EwJ,UAAY,IAAMC,UAAQ,EAACjF,MAAQzD,KAAKiD,MAAM1B,OAAO+C,MAAQ,GAC7De,SAAW,SAAAuC,GAAM,OAAI,EAAKe,aAAaf,EAAOgB,OAAOnF,WAEhE,yBAAKjD,UAAU,yDACX,2BAAO+H,QAAQ,YAAY/H,UAAU,kBAAmB5D,EAAWkC,WAAnE,KACA,2BAAO4G,KAAK,OAAOlF,UAAU,eAAea,GAAG,YAAYmH,YAAc5L,EAAWsC,uBAC7EuJ,UAAY,GAAKC,UAAQ,EAACjF,MAAQzD,KAAKiD,MAAM1B,OAAOgK,OAAS,GAC7DlG,SAAW,SAAAuC,GAAM,OAAI,EAAK+D,cAAc/D,EAAOgB,OAAOnF,WAEjE,yBAAKjD,UAAU,yDACX,2BAAO+H,QAAQ,eAAe/H,UAAU,mBAAoB5D,EAAWuC,cAAvE,KACA,2BAAOuG,KAAK,WAAWlF,UAAU,eAAea,GAAG,eAAeqH,UAAQ,EACnEF,YAAc5L,EAAW4C,0BAA4BiJ,UAAY,GACjEhF,MAAQzD,KAAKiD,MAAM1B,OAAOkK,UAAY,GACtCpG,SAAW,SAAAuC,GAAM,OAAI,EAAKgE,iBAAiBhE,EAAOgB,OAAOnF,WAEpE,yBAAKjD,UAAU,yDACX,2BAAO+H,QAAQ,kBAAkB/H,UAAU,mBAAoB5D,EAAWwC,sBAA1E,KACA,2BAAOsG,KAAK,WAAWlF,UAAU,eAAea,GAAG,kBAAkBoH,UAAY,GAC1ED,YAAc5L,EAAW6C,kCAAoCiJ,UAAQ,EACrErD,SAAW,SAAAuC,GAAM,OAAI,EAAKiE,wBAAwBjE,EAAOgB,OAAOnF,WAE3E,yBAAKjD,UAAU,yDACX,yBAAKA,UAAU,cACX,2BAAOkF,KAAK,WAAWlF,UAAU,mBAAmBa,GAAG,YAChDgE,SAAW,SAAAuC,GAAM,OAAI,EAAKkE,cAAclE,EAAOgB,OAAOmD,UAAWA,QAAU/L,KAAKiD,MAAM1B,OAAOgC,QACpG,2BAAO/C,UAAU,2BAA2B+H,QAAQ,aAAc3L,EAAWoC,cAGrF,2BAAOwB,UAAU,eAAgB5D,EAAWQ,YAEhD,kBAACuM,EAAA,EAAMgB,OAAP,CAAcnK,UAAU,WACpB,4BAAQkF,KAAK,SAASlF,UAAU,0BAA2B5D,EAAWK,QACtE,4BAAQyI,KAAK,QAAQlF,UAAU,sBAAsBI,QAAU,SAACgD,GAC5DA,EAAMqG,kBACN,EAAKe,UACHpO,EAAWO,eA3D7C,GCCA,4MACI8F,MAAe,CAAE2H,WAAW,EAAOrJ,OAAQ,GAAYmG,UAAU,EAAOsE,OAAQ,IADpF,4FAGyBpE,GAHzB,wEAIQA,EAAOC,iBAJf,kBAMkB5F,EAAY8F,OAAO/H,KAAKiD,MAAM1B,QANhD,OAOYG,IACA1B,KAAK8E,MAAM4C,WARvB,gDAUY7F,EAAQ,EAAD,IAVnB,mJAkB2ByC,GACnBtE,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAE+C,aAnBnE,oCA0B4BiH,GACpBvL,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAEgK,cA3BnE,oCAkC4BhI,GACpBvD,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAEgC,cAnCnE,uCA0C+BkI,GACvBzL,KAAK2D,SAAS,CAAEpC,OAAQzB,OAAO6C,OAAO3C,KAAKiD,MAAM1B,OAAQ,CAAEkK,iBA3CnE,8CA8CsCA,GAC1BA,IAAazL,KAAKiD,MAAM1B,OAAOkK,UAC/BzL,KAAK2D,SAAS,CAAEqI,OAAQlM,OAAO6C,OAAO3C,KAAKiD,MAAM+I,OAAQ,CAAEC,cAAc,QAhDrF,8BAqDQjM,KAAK2D,SAAS,CAAEiH,WAAW,MArDnC,6BAyDQ5K,KAAK2D,SAAS,CAAEiH,WAAW,QAzDnC,GAA2ClG,IAAMC,YCCpCuH,EAAb,yKAGQ,GAAIlM,KAAKiD,MAAMyE,SACX,OAAO,kBAAC,IAAD,CAAUjH,GAAG,YAJhC,+BAQkC,IAAD,OACzB,OACI,yBAAKD,UAAU,SACTR,KAAKmM,WACP,yBAAK3L,UAAU,mBACX,0BAAMA,UAAU,MAAM2H,SAAW,SAAAP,GAAM,OAAI,EAAK2D,MAAM3D,IAAUS,QAAUC,EAAStI,KAAKoM,MAAMvF,KAAK7G,MAAO,MACtG,yBAAKQ,UAAU,mBACX,2BAAO+H,QAAQ,YAAY/H,UAAU,kBAAmB5D,EAAWkC,YACnE,2BAAO4G,KAAK,OAAOlF,UAAU,eAAea,GAAG,YAAYmH,YAAc5L,EAAWyC,uBAC7EoJ,UAAY,GAAKC,UAAQ,EAACjF,MAAQzD,KAAKiD,MAAM1B,OAAOgK,OAAS,GAC7DlG,SAAW,SAAAuC,GAAM,OAAI,EAAK+D,cAAc/D,EAAOgB,OAAOnF,WAEjE,yBAAKjD,UAAU,8BACX,2BAAO+H,QAAQ,gBAAgB/H,UAAU,mBAAoB5D,EAAWuC,eACxE,2BAAOuG,KAAK,WAAWlF,UAAU,eAAea,GAAG,gBAAgBqH,UAAQ,EACpEF,YAAc5L,EAAW4C,0BAA4BiJ,UAAY,GACjEhF,MAAQzD,KAAKiD,MAAM1B,OAAOkK,UAAY,GACtCpG,SAAW,SAAAuC,GAAM,OAAI,EAAKgE,iBAAiBhE,EAAOgB,OAAOnF,WAEpE,yBAAKjD,UAAU,mEACX,4BAAQA,UAAU,oCAAoCkF,KAAK,UAAW9I,EAAW0C,gBACjF,4BAAQkB,UAAU,iCAAiCkF,KAAK,SAAU9I,EAAWM,UAGrF,yBAAKsD,UAAU,oCACX,kBAAC,EAAD,CAAoBkH,SAAW,kBAAM,EAAK/D,SAAS,CAAE+D,UAAU,cAjCvF,GAAiC4D,GCOjCe,IAAOC,OAAO,SAEdC,IAASC,OACL,kBAAC,IAAD,CAAQC,QAAUC,eACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAYX,IAClC,kBAAC,IAAD,CAAOS,KAAK,QAAQE,UAAYxB,IAChC,kBAAC,IAAD,CAAOsB,KAAK,oBAAoBE,UAAY5E,IAC5C,kBAAC,IAAD,CAAO0E,KAAK,cAAcE,UAAY5E,IACtC,kBAAC,IAAD,CAAO0E,KAAK,UAAUE,UAAY3G,IAClC,kBAAC,IAAD,CAAOyG,KAAK,IAAIE,UAAY,kBAAM,wBAAIrM,UAAU,oEAAd,uBAE/BsM,SAASC,eAAe,SvB+G/B,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAM3I,MAAK,SAAA4I,GAC/BA,EAAaC,kB","file":"static/js/main.7f7afd7b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${ process.env.PUBLIC_URL }/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","class Dictionary {\n    NENHUM_REGISTRO_ENCONTRADO: string = 'Nenhum registro encontrado!';\n    CONFIRMAR: string = 'Confirmar';\n    NAO: string = 'Não';\n    SIM: string = 'Sim';\n    SALVAR: string = 'Salvar';\n    CANCEL: string = 'Cancelar';\n    CLOSE: string = 'Fechar';\n    MANDATORY: string = 'Obrigatório: ( * )';\n    DELETAR_REGISTRO: string = 'Deletar registro';\n    EDITAR_REGISTRO: string = 'Editar registro';\n    // book\n    BOOK_AUTHOR: string = 'Autor';\n    BOOK_NAME: string = 'Nome';\n    BOOK_DESCRIPTION: string = 'Descrição';\n    BOOK_COVER: string = 'Capa';\n    BOOK_ACTIONS: string = 'Ação';\n    BOOK_TITLE: string = 'Livros';\n    BOOK_ADD_NEW: string = 'Adicionar';\n    BOOK_PLACEHOLDER_NAME: string = 'Nome do livro...';\n    BOOK_PLACEHOLDER_AUTHOR: string = 'Nome do autor...';\n    BOOK_PLACEHOLDER_DESCRIPTION: string = 'Descrição do livro...';\n    BOOK_SELECT: string = 'Selecione';\n    BOOK_DELETE_CONFIRM: string = 'Você deseja realmente deletar o livro {{ param }}?';\n    BOOK_REGISTER_TITLE: string = 'Cadastrar';\n    BOOK_EVALUATION: string = 'Avaliações';\n    // header\n    HEADER_TITLE: string = 'Biblioteca';\n    HEADER_BOOKS: string = 'Livros';\n    // paginate\n    PAGINATE_PRIMEIRA: string = 'Primeira';\n    PAGINATE_ANTERIOR: string = 'Anterior';\n    PAGINATE_PROXIMA: string = 'Próxima';\n    PAGINATE_ULTIMA: string = 'Última';\n    PAGINATE_MOSTRANDO: string = 'Mostrando';\n    PAGINATE_DE: string = 'de';\n    PAGINATE_ATE: string = 'até';\n    // user\n    USER_LOGIN: string = 'Login';\n    USER_NAME: string = 'Nome';\n    USER_ADMIN: string = 'Administrador';\n    USER_PLACEHOLDER_NAME: string = 'Digite o nome...';\n    USER_PLACEHOLDER_LOGIN: string = 'Digite o login...';\n    USER_PASSWORD: string = 'Senha';\n    USER_CONFIRM_PASSWORD: string = 'Confirmar senha';\n    USER_LOGIN_PLACEHOLDER: string = 'Digite seu usuário...';\n    USER_LOGIN_BTN: string = 'Entrar';\n    USER_REGISTER: string = 'Cadastre-se';\n    USER_PASSWORD_PLACEHOLDER: string = 'Digite sua senha...';\n    USER_CONFIRM_PASSWORD_PLACEHOLDER: string = 'Confirme sua senha...';\n    ERROR_MESSAGE: string = 'Ocorreu um erro na requisição!';\n    ERROR_TITLE: string = 'Erro';\n    SUCCESS_MESSAGE: string = 'Operação realizada com sucesso!';\n    SUCCESS_TITLE: string = 'Sucesso';\n\n    constructor() {\n        Object.freeze(this);\n    }\n\n    getMessageWithParam(msg: string, param: any = '') {\n        // @ts-ignore\n        return msg.replace('{{ param }}', param);\n    }\n}\n\nexport const dictionary = new Dictionary();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Book } from './book';\nimport { dictionary } from '../../shared/dictionary';\n\nexport class BookColumnCreator {\n    private static noop() {\n    }\n\n\n    /**\n     * Return a react action element\n     * @param row\n     * @param deleteRecord\n     */\n    static getActionsIcons(row: Book, deleteRecord: Function = this.noop) {\n        return <div className=\"d-inline-flex justify-content-around flex-wrap\">\n            <Link to={ `/livros/${ row._id }` } className=\"btn btn-link text-light\" title={ dictionary.EDITAR_REGISTRO }>\n                <em className=\"eva eva-edit eva-2x\"/>\n            </Link>\n            <button className=\"btn btn-link text-light\" title={ dictionary.DELETAR_REGISTRO } onClick={ () => deleteRecord(row) }>\n                <em className=\"eva eva-trash eva-2x\"/>\n            </button>\n        </div>;\n    }\n\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { Book } from './book';\nimport { Pagination } from '../paginate/paginate.type';\n\nexport class BookService {\n\n    private static get URL() {\n        if ('production' === process.env.NODE_ENV) {\n            return '/api/books';\n        }\n        return 'http://localhost:3001/api/books';\n    }\n\n    /**\n     * Call server to get data\n     *\n     * @param params\n     * @param text\n     */\n    findAll(params: Pagination, text: string): Promise<AxiosResponse<{ count: number, data: Book[] }>> {\n        if (params.filter.text !== text) {\n            params.start = 0;\n        }\n        params.filter = { text };\n        return axios.get<{ count: number, data: Book[] }>(BookService.URL, { params });\n    }\n\n    /**\n     * Find on by id\n     *\n     * @param id\n     */\n    findById(id: string): Promise<AxiosResponse<Book>> {\n        return axios.get<Book>(`${ BookService.URL }/${ id }`);\n    }\n\n\n    /**\n     * Call server to update\n     * @param id\n     */\n    removeBook(id: string): Promise<AxiosResponse<{ success: boolean }>> {\n        return axios.delete(`${ BookService.URL }/${ id }`);\n    }\n\n    /**\n     * Call server to create a new record\n     * @param record\n     */\n    create(record: Book): Promise<AxiosResponse<{ success: boolean }>> {\n        return axios.post(BookService.URL, record);\n    }\n\n    /**\n     * Call server to update a record\n     * @param id\n     * @param record\n     */\n    update(id: string, record: Book): Promise<AxiosResponse<{ success: boolean }>> {\n        return axios.put(`${ BookService.URL }/${ id }`, record);\n    }\n}\n","import toastr from 'toastr';\nimport { dictionary } from './dictionary';\n\nexport const onSuccess = () => toastr.success(dictionary.SUCCESS_MESSAGE, dictionary.SUCCESS_TITLE);\n\nexport const onError = (error: Error, message = '') => {\n    console.error(error);\n    toastr.error(message || error.message || dictionary.ERROR_MESSAGE, dictionary.ERROR_TITLE);\n};\n","import axios from 'axios';\nimport { User } from './user';\n\nclass UserService {\n\n    private static get URL() {\n        if ('production' === process.env.NODE_ENV) {\n            return '/api/users';\n        }\n        return 'http://localhost:3001/api/users';\n    }\n\n    /**\n     * Call server to create a new record\n     * @param record\n     */\n    async create(record: User) {\n        const { data } = await axios.post(UserService.URL, record);\n        if (!data) {\n            throw new Error();\n        }\n        localStorage.setItem('user', JSON.stringify(data));\n    }\n\n    async login(params: User) {\n        const { data } = await axios.get(UserService.URL, { params });\n        if (!data) {\n            throw new Error();\n        }\n        localStorage.setItem('user', JSON.stringify(data));\n    }\n\n    logout() {\n        localStorage.removeItem('user');\n    }\n\n    isLogged() {\n        return !!localStorage.getItem('user');\n    }\n\n    getUser() {\n        return Object.assign({}, JSON.parse(localStorage.getItem('user') as string));\n    }\n}\n\nexport const userService = new UserService();\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { AxiosResponse } from 'axios';\nimport { Book } from './book';\nimport { BookService } from './book.service';\nimport { onError, onSuccess } from '../../shared/toastr-util';\nimport { Pagination } from '../paginate/paginate.type';\nimport { dictionary } from '../../shared/dictionary';\nimport { userService } from '../user/user.service';\n\nexport class BookComponent extends React.Component {\n    private pagination!: Pagination;\n    protected service: BookService = new BookService();\n    protected totalRecords: number = 0;\n    public state = { rows: Array<Book>(), redirectLogin: !userService.isLogged() || !userService.getUser().admin };\n\n    /**\n     * Find all codes according to the filter\n     * @param filter\n     */\n    async find(filter: string) {\n        try {\n            const value: AxiosResponse<{ count: number, data: Book[] }> = await this.service.findAll(this.pagination, filter);\n\n            this.totalRecords = value.data.count;\n            this.setState({ rows: value.data.data });\n        } catch (error) {\n            onError(error);\n        }\n    }\n\n    /**\n     * Make a request with parameters\n     * @param event\n     * @param param\n     * @private\n     */\n    async _doRequest(event: Function, param: any) {\n        try {\n            await event(param);\n            this.find('');\n            onSuccess();\n        } catch (error) {\n            onError(error);\n        }\n    }\n\n    /**\n     * Call <code>find</code> method to update view\n     * @param pagination\n     */\n    onChangePaginate(pagination: Pagination) {\n        this.pagination = pagination;\n        this.find('');\n    }\n\n\n    /**\n     * Build a confirmation modal\n     *\n     * @param message\n     * @param title\n     * @private\n     */\n    _confirm(message: string, title: string = dictionary.CONFIRMAR) {\n        return Swal.fire({\n            title: title,\n            text: message,\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: dictionary.SIM,\n            cancelButtonText: dictionary.NAO\n        });\n    }\n\n    removeBook(row: Book) {\n        this._confirm(dictionary.getMessageWithParam(dictionary.BOOK_DELETE_CONFIRM, row.name)).then(({ value }) => {\n            if (value) {\n                this._doRequest(this.service.removeBook, row._id);\n            }\n        });\n    }\n}\n","import React from 'react';\nimport { dictionary } from '../../shared/dictionary';\nimport { PaginateComponent } from './paginate.component';\n\nexport class PaginateRender extends PaginateComponent {\n    /**\n     * Create paginate info counters\n     */\n    private getInfo() {\n        const from = this.props.totalRecords > 0 ? (this.pagination.start || 0) + 1 : 0;\n        const of = (this.pagination.start + this.props.step) > this.props.totalRecords ? this.props.totalRecords : (this.pagination.start + this.props.step);\n        return (\n            <div className=\"mt-auto\">\n                { dictionary.PAGINATE_MOSTRANDO } { from } { dictionary.PAGINATE_ATE } { of } { dictionary.PAGINATE_DE } { this.props.totalRecords }\n            </div>\n        );\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> {\n        return <div className=\"d-flex justify-content-between\">\n            { this.getInfo() }\n            <div>\n                <button disabled={ this.pagination.start < this.props.step } onClick={ () => this.paginate(0) }\n                        className=\"btn btn-link\" title={ dictionary.PAGINATE_PRIMEIRA }>\n                    <em className=\"eva eva-arrowhead-left eva-2x\"/>\n                </button>\n                <button disabled={ this.pagination.start < this.props.step } onClick={ () => this.paginate(2) }\n                        className=\"btn btn-link\" title={ dictionary.PAGINATE_ANTERIOR }>\n                    <em className=\"eva eva-chevron-left eva-3x\"/>\n                </button>\n                <button disabled={ this.props.totalRecords <= (this.props.step + this.pagination.start) } onClick={ () => this.paginate(1) }\n                        className=\"btn btn-link\" title={ dictionary.PAGINATE_PROXIMA }>\n                    <em className=\"eva eva-chevron-right-outline eva-3x\"/>\n                </button>\n                <button disabled={ this.props.totalRecords <= (this.props.step + this.pagination.start) } onClick={ () => this.paginate(3) }\n                        className=\"btn btn-link\" title={ dictionary.PAGINATE_ULTIMA }>\n                    <em className=\"eva eva-arrowhead-right eva-2x\"/>\n                </button>\n            </div>\n        </div>;\n    }\n}\n","import React from 'react';\nimport { Pagination, Props } from './paginate.type';\n\nexport class PaginateComponent extends React.Component<Props> {\n    protected pagination: Pagination = { start: 0, step: this.props.step, filter: '' };\n\n    componentDidMount() {\n        this.callSearch();\n    }\n\n    /**\n     * Call onChanges method whe the page changes\n     */\n    callSearch() {\n        this.props.onChange(this.pagination);\n    }\n\n    /**\n     * Select the page according to <code>option</code> parameter\n     *\n     * @param option\n     */\n    protected paginate(option: number) {\n        switch (option) {\n            case 1: {\n                if ((this.pagination.start + this.props.step) > this.props.totalRecords) return;\n                this.pagination.start += this.props.step;\n                break;\n            }\n            case 2: {\n                if (this.pagination.start <= 0) return;\n                this.pagination.start -= this.props.step;\n                break;\n            }\n            case 3: {\n                this.pagination.start = Math.ceil(this.props.totalRecords / this.props.step) * this.props.step;\n                if (this.pagination.start >= this.props.totalRecords) {\n                    this.pagination.start -= this.props.step;\n                }\n                break;\n            }\n            default: {\n                this.pagination.start = 0;\n            }\n        }\n        this.callSearch();\n    }\n}\n","import React from 'react';\nimport { dictionary } from '../../shared/dictionary';\nimport { Link } from 'react-router-dom';\nimport { userService } from '../user/user.service';\n\nexport class HeaderRender extends React.Component {\n\n    render(): React.ReactElement {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <Link to=\"/home\" className=\"navbar-brand\">{ dictionary.HEADER_TITLE }</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\n                        aria-expanded=\"false\" aria-label=\"Alterna navegação\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\" hidden={ !userService.getUser().admin }>\n                            <Link className=\"nav-link\" to=\"/livros\">\n                                { dictionary.HEADER_BOOKS }\n                            </Link>\n                        </li>\n                    </ul>\n                    <span className=\"navbar-text\">\n                        <span className=\"mr-sm-2\">{ userService.getUser().name }</span>\n                        <Link className=\"my-2 my-sm-0\" to=\"/\" onClick={ () => userService.logout() }>\n                            <em className=\"eva eva-log-out-outline eva-lg\"/>\n                        </Link>\n                    </span>\n                </div>\n            </nav>\n        );\n    }\n}\n","import React from 'react';\nimport { BookColumnCreator } from './book-column-creator';\nimport { BookComponent } from './book.component';\nimport { dictionary } from '../../shared/dictionary';\nimport { PaginateRender } from '../paginate/paginate.render';\nimport { Pagination } from '../paginate/paginate.type';\nimport { Link, Redirect } from 'react-router-dom';\nimport { HeaderRender } from '../header/header.render';\n\nexport class BookRender extends BookComponent {\n\n    render(): React.ReactElement {\n        return this.state.redirectLogin ? <Redirect to='/'/> : (\n            <div>\n                <HeaderRender/>\n                <div className=\"main-body book\">\n                    <div className=\"container-fluid\">\n                        <div className=\"card bg-dark\">\n                            <div className=\"card-header\">\n                                <h3>{ dictionary.BOOK_TITLE }</h3>\n                            </div>\n                            <div className=\"card-body\">\n                                <Link className=\"btn btn-success btn-sm d-inline-flex align-items-center\" to=\"/livros/cadastrar\">\n                                    <em className=\"eva eva-plus-outline eva-2x\"/><span>{ dictionary.BOOK_ADD_NEW }</span>\n                                </Link>\n                                <table className=\"table table-hover table-striped table-striped table-borderless table-dark\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"text-center\">{ dictionary.BOOK_COVER }</th>\n                                            <th className=\"text-center\">{ dictionary.BOOK_NAME }</th>\n                                            <th className=\"text-center\">{ dictionary.BOOK_AUTHOR }</th>\n                                            <th className=\"text-center\">{ dictionary.BOOK_DESCRIPTION }</th>\n                                            <th className=\"text-center\">{ dictionary.BOOK_ACTIONS }</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.rows.map(row => {\n                                                return (\n                                                    <tr key={ row._id }>\n                                                        <td className=\"text-center\">\n                                                            <div className=\"cover\">\n                                                                <img className=\"cover-img\" src={ row.cover.base64 } alt={ dictionary.BOOK_COVER }/>\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">{ row.name }</td>\n                                                        <td className=\"text-center\">{ row.author } </td>\n                                                        <td className=\"text-center\" title={ row.description }>\n                                                            <div className=\"description\">\n                                                                { row.description.substring(0, 250) }\n                                                            </div>\n                                                        </td>\n                                                        <td className=\"text-center\">{\n                                                            BookColumnCreator.getActionsIcons(row, this.removeBook.bind(this))\n                                                        }</td>\n                                                    </tr>\n                                                );\n                                            })\n                                        }\n                                        {\n                                            this.state.rows.length === 0 &&\n                                            <tr className=\"no-hover\">\n                                                <td colSpan={ 5 }>{ dictionary.NENHUM_REGISTRO_ENCONTRADO }</td>\n                                            </tr>\n                                        }\n                                    </tbody>\n                                    <tfoot>\n                                        <tr className=\"no-hover\">\n                                            <td colSpan={ 5 }>\n                                                <PaginateRender onChange={ (pagination: Pagination) => this.onChangePaginate(pagination) }\n                                                                step={ 10 }\n                                                                totalRecords={ this.totalRecords }/>\n                                            </td>\n                                        </tr>\n                                    </tfoot>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","    export default <F extends (...args: any[]) => any>(func: F, waitFor: number) => {\n    let timeout: NodeJS.Timeout;\n\n    return (...args: Parameters<F>): Promise<ReturnType<F>> =>\n        new Promise(resolve => {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            timeout = setTimeout(() => resolve(func(...args)), waitFor);\n        });\n}\n","import React, { FormEvent } from 'react';\nimport { BookService } from '../book.service';\nimport { onError, onSuccess } from '../../../shared/toastr-util';\nimport { MatchProps, State } from './book-register.type';\nimport { Book } from '../book';\nimport { userService } from '../../user/user.service';\n\nexport class BookRegisterComponent extends React.Component<MatchProps, State> {\n    private service: BookService = new BookService();\n    public state: State = { record: {} as Book, redirect: false, redirectLogin: !userService.isLogged() || !userService.getUser().admin };\n    private _id: string = this.props.match.params.id;\n\n    componentDidMount(): void {\n        if (this._id) {\n            this.service.findById(this._id)\n                .then(({ data }) => {\n                    this.setState({\n                        record: data\n                    });\n                }, () => {\n                    this.setState({\n                        redirect: true\n                    });\n                });\n        }\n    }\n\n    protected async save($event: FormEvent) {\n        $event.preventDefault();\n        try {\n            if (this._id) {\n                await this.service.update(this._id, this.state.record);\n            } else {\n                await this.service.create(this.state.record);\n            }\n            onSuccess();\n        } catch (error) {\n            onError(error);\n        } finally {\n            this.setState({ redirect: true });\n        }\n    }\n\n    /**\n     * Update the value state\n     * @param name\n     */\n    protected onChangeName(name: string) {\n        this.setState({ record: Object.assign(this.state.record, { name }) });\n    }\n\n    /**\n     * Update the value state\n     * @param file\n     */\n    protected getFiles(file: Object) {\n        this.setState({\n            record: Object.assign(this.state.record, { cover: file })\n        });\n    }\n\n    /**\n     * Update the value state\n     * @param description\n     */\n    protected onChangeDescription(description: string) {\n        this.setState({ record: Object.assign(this.state.record, { description }) });\n    }\n\n    /**\n     * Update the value state\n     * @param author\n     */\n    protected onChangeAuthor(author: string) {\n        this.setState({ record: Object.assign(this.state.record, { author }) });\n    }\n}\n","import React from 'react';\nimport debounce from '../../../shared/debounce';\nimport { dictionary } from '../../../shared/dictionary';\nimport { BookRegisterComponent } from './book-register.component';\n// @ts-ignore\nimport FileInputComponent from 'react-file-input-previews-base64';\nimport { Redirect } from 'react-router-dom';\nimport { HeaderRender } from '../../header/header.render';\n\nexport class BookRegisterRender extends BookRegisterComponent {\n\n    private goToGrid() {\n        if (this.state.redirect) {\n            return <Redirect to='/livros'/>;\n        }\n    };\n\n    render(): React.ReactElement {\n        return this.state.redirectLogin ? <Redirect to='/'/> : (\n            <div>\n                <HeaderRender/>\n                <div className=\"main-body book\">\n                    { this.goToGrid() }\n                    <div className=\"container-fluid\">\n                        <form onSubmit={ $event => this.save($event) }\n                              onReset={ () => debounce(() => this.setState({ redirect: true }), 500)() }>\n                            <div className=\"card bg-dark\">\n                                <div className=\"card-header\">\n                                    <h4>{ dictionary.BOOK_REGISTER_TITLE }</h4>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                        <label htmlFor=\"bookName\" className=\"col-form-label\">{ dictionary.BOOK_NAME }*</label>\n                                        <input type=\"text\" className=\"form-control\" id=\"bookName\" placeholder={ dictionary.BOOK_PLACEHOLDER_NAME }\n                                               maxLength={ 100 } required value={ this.state.record.name || '' }\n                                               onChange={ $event => this.onChangeName($event.target.value) }/>\n                                    </div>\n                                    <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                        <label htmlFor=\"bookAuthor\" className=\" col-form-label\">{ dictionary.BOOK_AUTHOR }</label>\n                                        <input type=\"text\" className=\"form-control\" id=\"bookAuthor\"\n                                               placeholder={ dictionary.BOOK_PLACEHOLDER_AUTHOR } maxLength={ 40 }\n                                               value={ this.state.record.author || '' }\n                                               onChange={ $event => this.onChangeAuthor($event.target.value) }/>\n                                    </div>\n                                    <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                        <label htmlFor=\"bookDescription\" className=\" col-form-label\">{ dictionary.BOOK_DESCRIPTION }</label>\n                                        <textarea className=\"form-control\" id=\"bookDescription\" maxLength={ 4000 }\n                                                  placeholder={ dictionary.BOOK_PLACEHOLDER_DESCRIPTION }\n                                                  value={ this.state.record.description || '' }\n                                                  onChange={ $event => this.onChangeDescription($event.target.value) } rows={ 10 }/>\n                                    </div>\n                                    <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                        <label htmlFor=\"bookCover\" className=\" col-form-label\">\n                                            { dictionary.BOOK_COVER }<small>(Max. 3mb)</small>\n                                        </label>\n                                        <div className=\"card\" hidden={ !this.state.record.cover }>\n                                            <img className=\"cover-preview\" src={ (this.state.record.cover || {}).base64 || '' }\n                                                 alt={ dictionary.BOOK_COVER }/>\n                                        </div>\n                                        <FileInputComponent labelText={ '' } callbackFunction={ this.getFiles.bind(this) } accept=\"image/png\"\n                                                            multiple={ false } imagePreview={ false }\n                                                            buttonComponent={\n                                                                <button type=\"button\"\n                                                                        className=\"btn btn-primary btn-sm\">\n                                                                    { dictionary.BOOK_SELECT }\n                                                                </button>\n                                                            }/>\n                                    </div>\n                                    <small className=\"text-danger\">{ dictionary.MANDATORY }</small>\n                                </div>\n                                <div className=\"card-footer\">\n                                    <div className=\"pull-right\">\n                                        <button className=\"btn btn-success btn-sm\" type=\"submit\">{ dictionary.SALVAR }</button>\n                                        <button className=\"btn btn-dark btn-sm\" type=\"reset\">{ dictionary.CANCEL }</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { BookService } from '../book/book.service';\nimport { AxiosResponse } from 'axios';\nimport { Book } from '../book/book';\nimport { onError } from '../../shared/toastr-util';\nimport { Pagination } from '../paginate/paginate.type';\nimport { userService } from '../user/user.service';\nimport { State } from './home-page.type';\n\nexport class HomePageComponent extends React.Component<any, State> {\n    protected service: BookService = new BookService();\n    protected pagination: Pagination = { start: 0, step: 20, filter: '' };\n    public state = { rows: Array<Book>(), redirectLogin: !userService.isLogged() };\n\n    componentDidMount(): void {\n        this.find('');\n    }\n\n    /**\n     * Find all codes according to the filter\n     * @param filter\n     */\n    async find(filter: string) {\n        try {\n            const value: AxiosResponse<{ count: number, data: Book[] }> = await this.service.findAll(this.pagination, filter);\n\n            this.setState({ rows: value.data.data });\n        } catch (error) {\n            onError(error);\n        }\n    }\n}\n","import axios, { AxiosResponse } from 'axios';\n\nexport class BookEvaluationService {\n\n    private static get URL() {\n        if ('production' === process.env.NODE_ENV) {\n            return '/api/books-evaluation';\n        }\n        return 'http://localhost:3001/api/books-evaluation';\n    }\n\n    /**\n     * Call server to update a record\n     * @param bookId\n     * @param rating\n     */\n    evaluate(bookId: string, rating: number): Promise<AxiosResponse<{ success: boolean }>> {\n        return axios.post(`${ BookEvaluationService.URL }/${ bookId }`, { rating });\n    }\n}\n","import React from 'react';\n// @ts-ignore\nimport StarRatings from 'react-star-ratings';\nimport { Modal } from 'react-bootstrap';\nimport { BookEvaluationComponent } from './book-evaluation.component';\nimport { dictionary } from '../../../shared/dictionary';\n\nexport class BookEvaluationRender extends BookEvaluationComponent {\n\n    modalEvaluations() {\n        if (!this.state.admin) {\n            return;\n        }\n        return <Modal show={ this.state.showEvaluations } centered={ true } onHide={ () => this.setState({ showEvaluations: false }) }>\n            <Modal.Header className=\"bg-dark\">\n                <div className=\"d-flex justify-content-between flex-grow-1 align-items-center\">\n                    <h3>{ dictionary.BOOK_EVALUATION }</h3>\n                    <button type=\"button\" className=\"btn btn-link btn-sm\" onClick={\n                        (event: React.MouseEvent<HTMLElement>) => {\n                            event.stopPropagation();\n                            this.setState({ showEvaluations: false });\n                        }\n                    }>\n                        <em className=\"eva eva-close-circle-outline eva-2x text-muted\"/>\n                    </button>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"bg-dark\">\n                { (this.props.book.evaluations || []).map(evaluation => {\n                    return <div className=\"row\" key={ evaluation._id }>\n                        <div className=\"col-6\">\n                            { evaluation.user.name }\n                        </div>\n                        <div className=\"col-6\">\n                            <StarRatings\n                                rating={ evaluation.rating }\n                                starRatedColor=\"rgb(237, 242, 94)\"\n                                starSpacing=\".2rem\"\n                                starDimension=\"2rem\"\n                                numberOfStars={ 5 }\n                                name='rated'\n                            />\n                        </div>\n                    </div>;\n                }) }\n            </Modal.Body>\n            <Modal.Footer className=\"bg-dark\">\n                <button type=\"button\" className=\"btn btn-dark btn-sm\" onClick={ (event: React.MouseEvent<HTMLElement>) => {\n                    event.stopPropagation();\n                    this.setState({ showEvaluations: false });\n                } }>{ dictionary.CLOSE }</button>\n            </Modal.Footer>\n        </Modal>;\n    }\n\n    render(): React.ReactElement {\n        return (\n            <div onClick={ () => this.setState({ showModal: true }) } className={ `${ this.props.className } book-evaluation` }>\n                { this.props.children }\n                { this.modalEvaluations() }\n                <Modal show={ this.state.showModal } centered={ true } dialogClassName=\"modal-90w\">\n                    <Modal.Header className=\"bg-dark\">\n                        <div className=\"d-flex justify-content-between flex-grow-1 align-items-center\">\n                            <div>\n                                <h3>{ this.props.book.name }</h3>\n                                <h6>{ this.props.book.author }</h6>\n                            </div>\n                            <button className=\"btn btn-link btn-sm\" onClick={\n                                (event: React.MouseEvent<HTMLElement>) => {\n                                    event.stopPropagation();\n                                    this.close();\n                                }\n                            }>\n                                <em className=\"eva eva-close-circle-outline eva-2x text-muted\"/>\n                            </button>\n                        </div>\n                    </Modal.Header>\n                    <Modal.Body className=\"bg-dark\">\n                        <div className=\"d-flex justify-content-end\">\n                            <button type=\"button\" className=\"btn btn-link text-light\" hidden={ !this.state.admin }\n                                    onClick={ () => this.setState({ showEvaluations: true }) }>\n                                <h5 className=\"m-auto\">\n                                    <span className=\"badge badge-light font-weight-bolder\">{ this.state.evaluations }</span>\n                                    <span className=\"sr-only\">unread messages</span>\n                                    <span> { dictionary.BOOK_EVALUATION }</span>\n                                </h5>\n                            </button>\n                            <StarRatings\n                                rating={ this.state.rating }\n                                starRatedColor=\"rgb(237, 242, 94)\"\n                                starHoverColor=\"rgba(237, 242, 94, .5)\"\n                                starSpacing=\".3rem\"\n                                starDimension=\"3rem\"\n                                changeRating={ this.changeRating.bind(this) }\n                                numberOfStars={ 5 }\n                                name='rating'\n                            />\n                        </div>\n                        <div className=\"book-evaluation-container\">\n                            <div className=\"book-evaluation-container-left\">\n                                <img className=\"book-evaluation-cover\" src={ this.props.book.cover.base64 } alt={ dictionary.BOOK_COVER }/>\n                            </div>\n                            <div className=\"book-evaluation-container-right\">\n                                <h5>{ dictionary.BOOK_DESCRIPTION }</h5>\n                                <div className=\"book-evaluation-container-right-description\">\n                                    { this.props.book.description }\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer className=\"bg-dark\">\n                        <button className=\"btn btn-dark btn-sm\" onClick={ (event: React.MouseEvent<HTMLElement>) => {\n                            event.stopPropagation();\n                            this.close();\n                        } }>{ dictionary.CLOSE }</button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { onError, onSuccess } from '../../../shared/toastr-util';\nimport { Props, State } from './book-evaluation.type';\nimport { BookEvaluationService } from './book-evaluation.service';\nimport { userService } from '../../user/user.service';\n\nexport class BookEvaluationComponent extends React.Component<Props, State> {\n    private service: BookEvaluationService = new BookEvaluationService();\n    public state: State = { showModal: false, rating: 0, evaluations: 0, admin: false, showEvaluations: false };\n\n    componentDidMount(): void {\n        const user = userService.getUser();\n        if (user.admin) {\n            this.setState({\n                admin: user.admin,\n                evaluations: (this.props.book.evaluations || []).length\n            });\n        }\n        if (this.props.book.evaluation) {\n            this.setState({\n                rating: this.props.book.evaluation.rating\n            });\n        }\n    }\n\n    protected async evaluate(newRating: number) {\n        try {\n            await this.service.evaluate(this.props.book._id, newRating);\n            onSuccess();\n        } catch (error) {\n            onError(error);\n        }\n    }\n\n    close() {\n        this.setState({ showModal: false });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n\n    changeRating(newRating: number) {\n        this.setState({ rating: newRating });\n        this.evaluate(newRating);\n    }\n}\n","import { HomePageComponent } from './home-page.component';\nimport React from 'react';\nimport { dictionary } from '../../shared/dictionary';\nimport { BookEvaluationRender } from '../book/book-evaluation/book-evaluation.render';\nimport { HeaderRender } from '../header/header.render';\nimport { Redirect } from 'react-router-dom';\n\nexport class HomePageRender extends HomePageComponent {\n\n    render(): React.ReactElement {\n        return this.state.redirectLogin ? <Redirect to=\"/\"/> : (\n            <div>\n                <HeaderRender/>\n                <div className=\"main-body\">\n                    <div className=\"container-fluid\">\n                        <div className=\"home-page\">\n                            {\n                                this.state.rows.map(book => {\n                                    return (\n                                        <div className=\"col-md-12 col-lg-6 col-xl-4 col-sm-12\" key={ book._id }>\n                                            <BookEvaluationRender book={ book } className=\"home-page-card bg-dark\">\n                                                <div className=\"home-page-card-img\">\n                                                    <img className=\"home-page-card-cover\" src={ book.cover.base64 } alt={ dictionary.BOOK_COVER }/>\n                                                    <div className=\"home-page-card-author\">\n                                                        <small>{ book.author }</small>\n                                                    </div>\n                                                </div>\n                                                <div className=\"home-page-card-text\">\n                                                    <div className=\"home-page-card-name\">\n                                                        { book.name }\n                                                    </div>\n                                                    <div className=\"home-page-card-description text-muted\">\n                                                        { book.description }\n                                                    </div>\n                                                </div>\n                                            </BookEvaluationRender>\n                                        </div>\n                                    );\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { FormEvent } from 'react';\nimport { onError } from '../../shared/toastr-util';\nimport { State } from './login.type';\nimport { userService } from '../user/user.service';\nimport { User } from '../user/user';\n\nexport class LoginComponent extends React.Component<any, State> {\n    state: State = { record: {} as User, redirect: false, error: false };\n\n    protected async login($event: FormEvent) {\n        $event.preventDefault();\n        try {\n            await userService.login(this.state.record);\n            this.setState({ redirect: true });\n        } catch (error) {\n            this.setState({ error: true });\n            const { response } = error;\n            onError(error, response.data);\n        }\n    }\n\n    clear() {\n        this.setState({ record: {} as User });\n    }\n\n    /**\n     * Update the value state\n     * @param login\n     */\n    protected onChangeLogin(login: string) {\n        this.setState({ record: Object.assign(this.state.record, { login }) });\n    }\n\n    /**\n     * Update the value state\n     * @param password\n     */\n    protected onChangePassword(password: string) {\n        this.setState({ record: Object.assign(this.state.record, { password }) });\n    }\n}\n","import React from 'react';\nimport { dictionary } from '../../shared/dictionary';\nimport { UserRegisterComponent } from './user-register.component';\nimport { Modal } from 'react-bootstrap';\n\nexport class UserRegisterRender extends UserRegisterComponent {\n\n    render(): React.ReactElement {\n        return (\n            <button type=\"button\" onClick={ () => this.setState({ showModal: true }) } className=\"btn btn-link\">\n                { dictionary.USER_REGISTER }\n                <Modal show={ this.state.showModal } centered={ true } dialogClassName=\"modal-lg\">\n                    <form onSubmit={ $event => this.save($event) } onReset={ () => this.close() }>\n                        <Modal.Header className=\"bg-dark\">\n                            <div className=\"d-flex justify-content-between flex-grow-1 align-items-center\">\n                                <h5>{ dictionary.USER_REGISTER }</h5>\n                                <button type=\"button\" className=\"btn btn-link\" onClick={\n                                    (event: React.MouseEvent<HTMLElement>) => {\n                                        event.stopPropagation();\n                                        this.close();\n                                    }\n                                }><em className=\"eva eva-close-circle-outline eva-2x text-muted\"/></button>\n                            </div>\n                        </Modal.Header>\n                        <Modal.Body className=\"bg-dark\">\n                            <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                <label htmlFor=\"userName\" className=\"col-form-label\">{ dictionary.USER_NAME }*</label>\n                                <input type=\"text\" className=\"form-control\" id=\"userName\" placeholder={ dictionary.USER_PLACEHOLDER_NAME }\n                                       maxLength={ 100 } required value={ this.state.record.name || '' }\n                                       onChange={ $event => this.onChangeName($event.target.value) }/>\n                            </div>\n                            <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                <label htmlFor=\"userLogin\" className=\"col-form-label\">{ dictionary.USER_LOGIN }*</label>\n                                <input type=\"text\" className=\"form-control\" id=\"userLogin\" placeholder={ dictionary.USER_PLACEHOLDER_LOGIN }\n                                       maxLength={ 30 } required value={ this.state.record.login || '' }\n                                       onChange={ $event => this.onChangeLogin($event.target.value) }/>\n                            </div>\n                            <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                <label htmlFor=\"userPassword\" className=\" col-form-label\">{ dictionary.USER_PASSWORD }*</label>\n                                <input type=\"password\" className=\"form-control\" id=\"userPassword\" required\n                                       placeholder={ dictionary.USER_PASSWORD_PLACEHOLDER } maxLength={ 10 }\n                                       value={ this.state.record.password || '' }\n                                       onChange={ $event => this.onChangePassword($event.target.value) }/>\n                            </div>\n                            <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                <label htmlFor=\"confirmPassword\" className=\" col-form-label\">{ dictionary.USER_CONFIRM_PASSWORD }*</label>\n                                <input type=\"password\" className=\"form-control\" id=\"confirmPassword\" maxLength={ 10 }\n                                       placeholder={ dictionary.USER_CONFIRM_PASSWORD_PLACEHOLDER } required\n                                       onChange={ $event => this.onChangeConfirmPassword($event.target.value) }/>\n                            </div>\n                            <div className=\"col-lg-6 offset-lg-3 col-sm-12 offset-sm-0 form-group\">\n                                <div className=\"form-check\">\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"userAdmin\"\n                                           onChange={ $event => this.onChangeAdmin($event.target.checked) } checked={ this.state.record.admin }/>\n                                    <label className=\"form-check-label pointer\" htmlFor=\"userAdmin\">{ dictionary.USER_ADMIN }</label>\n                                </div>\n                            </div>\n                            <small className=\"text-danger\">{ dictionary.MANDATORY }</small>\n                        </Modal.Body>\n                        <Modal.Footer className=\"bg-dark\">\n                            <button type=\"submit\" className=\"btn btn-success btn-sm\">{ dictionary.SALVAR }</button>\n                            <button type=\"reset\" className=\"btn btn-dark btn-sm\" onClick={ (event: React.MouseEvent<HTMLElement>) => {\n                                event.stopPropagation();\n                                this.close();\n                            } }>{ dictionary.CLOSE }</button>\n                        </Modal.Footer>\n                    </form>\n                </Modal>\n            </button>\n        );\n    }\n}\n","import React, { FormEvent } from 'react';\nimport { onError, onSuccess } from '../../shared/toastr-util';\nimport { Props, State } from './user-register.type';\nimport { User } from './user';\nimport { userService } from './user.service';\n\nexport class UserRegisterComponent extends React.Component<Props, State> {\n    state: State = { showModal: false, record: {} as User, redirect: false, errors: {} };\n\n    protected async save($event: FormEvent) {\n        $event.preventDefault();\n        try {\n            await userService.create(this.state.record);\n            onSuccess();\n            this.props.redirect();\n        } catch (error) {\n            onError(error);\n        }\n    }\n\n    /**\n     * Update the value state\n     * @param name\n     */\n    protected onChangeName(name: string) {\n        this.setState({ record: Object.assign(this.state.record, { name }) });\n    }\n\n    /**\n     * Update the value state\n     * @param login\n     */\n    protected onChangeLogin(login: string) {\n        this.setState({ record: Object.assign(this.state.record, { login }) });\n    }\n\n    /**\n     * Update the value state\n     * @param admin\n     */\n    protected onChangeAdmin(admin: boolean) {\n        this.setState({ record: Object.assign(this.state.record, { admin }) });\n    }\n\n    /**\n     * Update the value state\n     * @param password\n     */\n    protected onChangePassword(password: string) {\n        this.setState({ record: Object.assign(this.state.record, { password }) });\n    }\n\n    protected onChangeConfirmPassword(password: string) {\n        if (password !== this.state.record.password) {\n            this.setState({ errors: Object.assign(this.state.errors, { notConfirmed: true }) });\n        }\n    }\n\n    close() {\n        this.setState({ showModal: false });\n    }\n\n    open() {\n        this.setState({ showModal: true });\n    }\n}\n","import React from 'react';\nimport debounce from '../../shared/debounce';\nimport { LoginComponent } from './login.component';\nimport { Redirect } from 'react-router-dom';\nimport { dictionary } from '../../shared/dictionary';\nimport { UserRegisterRender } from '../user/user-register.render';\n\nexport class LoginRender extends LoginComponent {\n\n    private goToHome() {\n        if (this.state.redirect) {\n            return <Redirect to='/home'/>;\n        }\n    };\n\n    render(): React.ReactElement {\n        return (\n            <div className=\"login\">\n                { this.goToHome() }\n                <div className=\"login-container\">\n                    <form className=\"row\" onSubmit={ $event => this.login($event) } onReset={ debounce(this.clear.bind(this), 500) }>\n                        <div className=\"col-8 col-sm-10\">\n                            <label htmlFor=\"loginName\" className=\"col-form-label\">{ dictionary.USER_LOGIN }</label>\n                            <input type=\"text\" className=\"form-control\" id=\"loginName\" placeholder={ dictionary.USER_LOGIN_PLACEHOLDER }\n                                   maxLength={ 40 } required value={ this.state.record.login || '' }\n                                   onChange={ $event => this.onChangeLogin($event.target.value) }/>\n                        </div>\n                        <div className=\"col-8 col-sm-10 form-group\">\n                            <label htmlFor=\"loginPassword\" className=\" col-form-label\">{ dictionary.USER_PASSWORD }</label>\n                            <input type=\"password\" className=\"form-control\" id=\"loginPassword\" required\n                                   placeholder={ dictionary.USER_PASSWORD_PLACEHOLDER } maxLength={ 40 }\n                                   value={ this.state.record.password || '' }\n                                   onChange={ $event => this.onChangePassword($event.target.value) }/>\n                        </div>\n                        <div className=\"col-8 col-sm-10 form-group d-flex justify-content-end flex-wrap\">\n                            <button className=\"btn btn-success btn-sm form-group\" type=\"submit\">{ dictionary.USER_LOGIN_BTN }</button>\n                            <button className=\"btn btn-dark btn-sm form-group\" type=\"reset\">{ dictionary.CANCEL }</button>\n                        </div>\n                    </form>\n                    <div className=\"d-flex justify-content-end w-100\">\n                        <UserRegisterRender redirect={ () => this.setState({ redirect: true }) }/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createHashHistory } from 'history';\nimport moment from 'moment';\nimport { Route, Router, Switch } from 'react-router-dom';\n\nimport * as serviceWorker from './service-worker';\nimport './index.scss';\nimport 'moment/locale/pt-br';\nimport { BookRender } from './components/book/book.render';\nimport { BookRegisterRender } from './components/book/book-regiter/book-register.render';\nimport { HomePageRender } from './components/home-page/home-page.render';\nimport { LoginRender } from './components/login/login.render';\n\nmoment.locale('pt-br');\n\nReactDOM.render(\n    <Router history={ createHashHistory() }>\n        <Switch>\n            <Route path=\"/\" exact component={ LoginRender }/>\n            <Route path=\"/home\" component={ HomePageRender }/>\n            <Route path=\"/livros/cadastrar\" component={ BookRegisterRender }/>\n            <Route path=\"/livros/:id\" component={ BookRegisterRender }/>\n            <Route path=\"/livros\" component={ BookRender }/>\n            <Route path=\"*\" component={ () => <h1 className=\"w100 min-vh-100 d-flex justify-content-center align-items-center\">Page not found</h1> }/>\n        </Switch>\n    </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}